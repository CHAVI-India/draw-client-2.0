# Django Configuration
# SECURITY WARNING: Generate a new secret key for production!
# You can generate one using: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
DJANGO_SECRET_KEY=django-insecure-qv0-srbz)^5iuf8j7&625gbs+nd^hti-^8@y*5oibpti2(o1p0

# Debug mode - set to False in production
DJANGO_DEBUG=False

# Allowed hosts - comma-separated list of domains/IPs
# For production, specify your actual domain names
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,*


# CSRF Protection Settings
# Set to True in production when using HTTPS
CSRF_COOKIE_SECURE=False

# Set to True to prevent JavaScript access to CSRF cookie
CSRF_COOKIE_HTTPONLY=False

# CSRF cookie SameSite attribute (Strict, Lax, or None)
CSRF_COOKIE_SAMESITE=Lax

# CSRF cookie age in seconds (default: 31449600 = 1 year)
CSRF_COOKIE_AGE=31449600

# Use sessions to store CSRF token instead of cookies
CSRF_USE_SESSIONS=False

# Name of the CSRF cookie
CSRF_COOKIE_NAME=csrftoken

# Name of the request header used for CSRF authentication
CSRF_HEADER_NAME=HTTP_X_CSRFTOKEN

# Path for CSRF cookie
CSRF_COOKIE_PATH=/

# Trusted origins for CSRF (comma-separated, required for production)
# Example: CSRF_TRUSTED_ORIGINS=https://yourdomain.com,https://api.yourdomain.com
CSRF_TRUSTED_ORIGINS=

# Custom CSRF failure view (optional)
# CSRF_FAILURE_VIEW=your_app.views.csrf_failure

# For PostgreSQL example:
DJANGO_DB_ENGINE=django.db.backends.postgresql_psycopg2
DJANGO_DB_NAME=drawclient # This name should match that of the postgres db below
DJANGO_DB_USER=postgres
DJANGO_DB_PASSWORD=your_db_password # This should be a secure password
DJANGO_DB_HOST=db
DJANGO_DB_PORT=5432


# Postgres
POSTGRES_USER = postgres 
POSTGRES_PASSWORD = your_db_password # This should be a secure password
POSTGRES_DB = drawclient # This name should match that of the postgres db below


# Cache Configuration (Memcached)
# Default memcached location
MEMCACHED_LOCATION=memcached:11211

# Celery Configuration (RabbitMQ)
# Default RabbitMQ connection URL
RABBITMQ_URL=pyamqp://guest:guest@rabbitmq:5672

# For production RabbitMQ with authentication:
# RABBITMQ_URL=amqp://username:password@rabbitmq-host:5672/vhost

# Proxy Configuration
# If you are running behind a proxy, you may need to configure the following:
# HTTP_PROXY=http://your-proxy:port
# HTTPS_PROXY=http://your-proxy:port
# NO_PROXY=localhost,127.0.0.1

# Field Encryption Key
FIELD_ENCRYPTION_KEY=your_field_encryption_key #(generate using ./manage.py generate_encryption_key)


# CIFS Storage configuration required for network share folders.
# NETWORK_USER = username
# NETWORK_PASSWORD = password
# NETWORK_DOMAIN = domain
# NETWORK_PATH = //server/share


# Django Superuser credentials required for django database.
DJANGO_SUPERUSER_USERNAME = admin
DJANGO_SUPERUSER_PASSWORD = admin
DJANGO_SUPERUSER_EMAIL = admin@example.com

