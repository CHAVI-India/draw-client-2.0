# Generated by Django 5.2.6 on 2025-09-13 12:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dicom_handler', '0007_alter_dicomtagtype_options'),
    ]

    operations = [
        migrations.AlterField(
            model_name='rule',
            name='dicom_tag_type',
            field=models.ForeignKey(help_text='The DICOM tag type whose value will be evaluated.', on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.dicomtagtype'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='operator_type',
            field=models.CharField(choices=[('EQUALS', 'Equals'), ('NOT_EQUALS', 'Not Equals'), ('GREATER_THAN', 'Greater Than'), ('LESS_THAN', 'Less Than'), ('GREATER_THAN_OR_EQUAL_TO', 'Greater Than Or Equal To'), ('LESS_THAN_OR_EQUAL_TO', 'Less Than Or Equal To'), ('CASE_SENSITIVE_STRING_CONTAINS', 'Case Sensitive String Contains'), ('CASE_INSENSITIVE_STRING_CONTAINS', 'Case Insensitive String Contains'), ('CASE_SENSITIVE_STRING_DOES_NOT_CONTAIN', 'Case Sensitive String Does Not Contain'), ('CASE_INSENSITIVE_STRING_DOES_NOT_CONTAIN', 'Case Insensitive String Does Not Contain'), ('CASE_SENSITIVE_STRING_EXACT_MATCH', 'Case Sensitive String Exact Match'), ('CASE_INSENSITIVE_STRING_EXACT_MATCH', 'Case Insensitive String Exact Match')], help_text='The operator type. This can be a string operator to be used for text and number or a numeric operator for numeric values.', max_length=256),
        ),
        migrations.AlterField(
            model_name='rule',
            name='ruleset',
            field=models.ForeignKey(help_text='The ruleset to which this rule belongs to.', on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.ruleset'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='tag_value_to_evaluate',
            field=models.CharField(help_text='The tag value to evaluate. This is the value that the rule will match to.', max_length=256),
        ),
        migrations.AlterField(
            model_name='ruleset',
            name='associated_autosegmentation_template',
            field=models.ForeignKey(blank=True, help_text='The autosegmentation template associated with the ruleset.', null=True, on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.autosegmentationtemplate'),
        ),
        migrations.AlterField(
            model_name='ruleset',
            name='rule_combination_type',
            field=models.CharField(choices=[('AND', 'And'), ('OR', 'Or')], help_text='The rule combination type. This can be AND or OR.', max_length=256),
        ),
        migrations.AlterField(
            model_name='ruleset',
            name='ruleset_description',
            field=models.CharField(help_text='The description of the ruleset.', max_length=256),
        ),
        migrations.AlterField(
            model_name='ruleset',
            name='ruleset_name',
            field=models.CharField(help_text='The name of the ruleset.', max_length=256),
        ),
    ]
