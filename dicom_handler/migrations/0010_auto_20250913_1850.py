# Generated by Django 5.2.6 on 2025-09-13 13:20

import csv
import os
from django.db import migrations
from django.conf import settings


def load_dicom_tags(apps, schema_editor):
    """Load DICOM tags from CSV file into DICOMTagType model"""
    DICOMTagType = apps.get_model('dicom_handler', 'DICOMTagType')
    
    # Path to the CSV file
    csv_file_path = os.path.join(settings.BASE_DIR, 'seed_data', 'dicom_dictionary.csv')
    
    if not os.path.exists(csv_file_path):
        print(f"Warning: CSV file not found at {csv_file_path}")
        return
    
    # Clear existing data to avoid duplicates
    DICOMTagType.objects.all().delete()
    
    with open(csv_file_path, 'r', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        
        dicom_tags = []
        for row in reader:
            # Skip the id field as requested, use other fields
            dicom_tag = DICOMTagType(
                tag_name=row['tag_name'],
                tag_id=row['tag_id'],
                tag_description=row['tag_description'],
                value_representation=row['value_representation']
            )
            dicom_tags.append(dicom_tag)
        
        # Bulk create for better performance
        DICOMTagType.objects.bulk_create(dicom_tags, batch_size=1000)
        print(f"Successfully imported {len(dicom_tags)} DICOM tags")


def reverse_load_dicom_tags(apps, schema_editor):
    """Remove all DICOM tags"""
    DICOMTagType = apps.get_model('dicom_handler', 'DICOMTagType')
    DICOMTagType.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('dicom_handler', '0009_dicomtagtype_tag_description_dicomtagtype_tag_id_and_more'),
    ]

    operations = [
        migrations.RunPython(load_dicom_tags, reverse_load_dicom_tags),
    ]
