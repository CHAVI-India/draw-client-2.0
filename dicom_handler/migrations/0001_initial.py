# Generated by Django 5.2.6 on 2025-09-12 15:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutosegmentationTemplate',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('template_name', models.CharField(max_length=256)),
                ('template_description', models.CharField(max_length=256)),
                ('template_file_path', models.CharField(max_length=256)),
                ('template_file_checksum', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
            },
        ),
        migrations.CreateModel(
            name='DICOMStudy',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('study_instance_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_study_instance_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('study_description', models.CharField(blank=True, max_length=256, null=True)),
                ('study_protocol', models.CharField(blank=True, max_length=256, null=True)),
                ('study_modality', models.CharField(blank=True, max_length=256, null=True)),
                ('study_date', models.DateField(blank=True, null=True)),
                ('deidentified_study_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'DICOM Study',
                'verbose_name_plural': 'DICOM Studies',
                'ordering': ['-study_date'],
            },
        ),
        migrations.CreateModel(
            name='DICOMTagType',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('patient_id', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_patient_id', models.CharField(blank=True, max_length=256, null=True)),
                ('patient_name', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_gender', models.CharField(blank=True, max_length=10, null=True)),
                ('patient_date_of_birth', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['-patient_date_of_birth'],
            },
        ),
        migrations.CreateModel(
            name='RuleSet',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('ruleset_name', models.CharField(max_length=256)),
                ('ruleset_description', models.CharField(max_length=256)),
                ('rule_combination_type', models.CharField(choices=[('AND', 'And'), ('OR', 'Or')], max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Rule Set',
                'verbose_name_plural': 'Rule Sets',
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.IntegerField(default=1, editable=False, primary_key=True, serialize=False)),
                ('draw_api_credentials', models.CharField(blank=True, max_length=256, null=True)),
                ('folder_configuration', models.CharField(blank=True, max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configuration',
            },
        ),
        migrations.CreateModel(
            name='DICOMSeries',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('series_instance_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_series_instance_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('series_root_path', models.CharField(blank=True, max_length=256, null=True)),
                ('frame_of_reference_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_frame_of_reference_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('series_date', models.DateField(blank=True, null=True)),
                ('deidentified_series_date', models.DateField(blank=True, null=True)),
                ('instance_count', models.IntegerField(blank=True, null=True)),
                ('series_processsing_status', models.CharField(blank=True, choices=[('UNPROCESSED', 'Unprocessed'), ('RULE_MATCHED', 'Rule Matched'), ('RULE_NOT_MATCHED', 'Rule Not Matched'), ('MULTIPLE_RULES_MATCHED', 'Multiple Rules Matched'), ('DEIDENTIFIED', 'Deidentified'), ('DEIDENTIFICATION_FAILED', 'Deidentification Failed'), ('SENT_TO_DRAW_SERVER', 'Sent to Draw Server'), ('RTSTRUCTURE_RECEIVED', 'RT Structure Received'), ('RTSTRUCTURE_EXPORTED', 'RT Structure Exported'), ('RTSTRUCTURE_EXPORT_FAILED', 'RT Structure Export Failed')], default='UNPROCESSED', max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('matched_templates', models.ManyToManyField(to='dicom_handler.autosegmentationtemplate')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.dicomstudy')),
                ('matched_rule_sets', models.ManyToManyField(to='dicom_handler.ruleset')),
            ],
            options={
                'verbose_name': 'DICOM Series',
                'verbose_name_plural': 'DICOM Series',
            },
        ),
        migrations.CreateModel(
            name='DICOMInstance',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('sop_instance_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_sop_instance_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('instance_path', models.CharField(blank=True, max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('series_instance_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.dicomseries')),
            ],
            options={
                'verbose_name': 'DICOM Instance',
                'verbose_name_plural': 'DICOM Instances',
            },
        ),
        migrations.CreateModel(
            name='DICOMFileExport',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('deidentified_zip_file_path', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_zip_file_checksum', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_zip_file_transfer_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=256, null=True)),
                ('deidentified_zip_file_transfer_datetime', models.DateTimeField(blank=True, null=True)),
                ('server_segmentation_status', models.CharField(blank=True, max_length=256, null=True)),
                ('server_segmentation_updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deidentified_series_instance_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.dicomseries')),
            ],
            options={
                'verbose_name': 'DICOM File Export',
                'verbose_name_plural': 'DICOM File Exports',
            },
        ),
        migrations.AddField(
            model_name='dicomstudy',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.patient'),
        ),
        migrations.CreateModel(
            name='RTStructureFileImport',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('deidentified_sop_instance_uid', models.CharField(blank=True, max_length=256, null=True)),
                ('deidentified_rt_structure_file_path', models.CharField(blank=True, max_length=256, null=True)),
                ('received_rt_structure_file_checksum', models.CharField(blank=True, max_length=256, null=True)),
                ('received_rt_structure_file_download_datetime', models.DateTimeField(blank=True, null=True)),
                ('server_segmentation_status', models.CharField(blank=True, max_length=256, null=True)),
                ('server_segmentation_updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('reidentified_rt_structure_file_path', models.CharField(blank=True, max_length=256, null=True)),
                ('reidentified_rt_structure_file_export_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deidentified_series_instance_uid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.dicomseries')),
            ],
            options={
                'verbose_name': 'RT Structure File Import',
                'verbose_name_plural': 'RT Structure File Imports',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('operator_type', models.CharField(choices=[('EQUALS', 'Equals'), ('NOT_EQUALS', 'Not Equals'), ('GREATER_THAN', 'Greater Than'), ('LESS_THAN', 'Less Than'), ('GREATER_THAN_OR_EQUAL_TO', 'Greater Than Or Equal To'), ('LESS_THAN_OR_EQUAL_TO', 'Less Than Or Equal To'), ('STRING_CONTAINS', 'String Contains'), ('STRING_DOES_NOT_CONTAIN', 'String Does Not Contain'), ('STRING_EXACT_MATCH', 'String Exact Match')], max_length=256)),
                ('tag_value_to_evaluate', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dicom_tag_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.dicomtagtype')),
                ('ruleset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dicom_handler.ruleset')),
            ],
            options={
                'verbose_name': 'Rule',
                'verbose_name_plural': 'Rules',
            },
        ),
    ]
