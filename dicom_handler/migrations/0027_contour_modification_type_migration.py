# Generated by Django 5.2.6 on 2025-09-30 07:24

import csv
import os
from django.db import migrations
from django.conf import settings


def load_modification_types(apps, schema_editor):
    """Load Modification Types from CSV file to the ContourModificationTypeChoices model"""
    ContourModificationTypeChoices = apps.get_model('dicom_handler', 'ContourModificationTypeChoices')
    
    # Path to the CSV file
    csv_file_path = os.path.join(settings.BASE_DIR, 'seed_data', 'contour_modification_types_list.csv')
    
    if not os.path.exists(csv_file_path):
        print(f"Warning: CSV file not found at {csv_file_path}")
        return
    
    # Clear existing data to avoid duplicates
    ContourModificationTypeChoices.objects.all().delete()
    
    with open(csv_file_path, 'r', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        
        modification_types = []
        for row in reader:
            # Skip the id field as requested, use other fields
            modification_type = ContourModificationTypeChoices(
                modification_type=row['modification_type'],
            )
            modification_types.append(modification_type)
        
        # Bulk create for better performance
        ContourModificationTypeChoices.objects.bulk_create(modification_types, batch_size=1000)
        print(f"Successfully imported {len(modification_types)} modification types")


def reverse_load_modification_types(apps, schema_editor):
    """Remove all modification types"""
    ContourModificationTypeChoices = apps.get_model('dicom_handler', 'ContourModificationTypeChoices')
    ContourModificationTypeChoices.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('dicom_handler', '0026_alter_rtstructurefilevoidata_contour_modification_type'),
    ]

    operations = [
        migrations.RunPython(load_modification_types, reverse_load_modification_types),
    ]
