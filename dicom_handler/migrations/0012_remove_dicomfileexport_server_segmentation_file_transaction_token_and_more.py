# Generated by Django 5.2.6 on 2025-09-14 13:20

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dicom_handler', '0011_rename_draw_api_credentials_systemconfiguration_draw_bearer_token_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='dicomfileexport',
            name='server_segmentation_file_transaction_token',
        ),
        migrations.AddField(
            model_name='dicomfileexport',
            name='task_id',
            field=models.CharField(blank=True, help_text='Task ID returned by the DRAW API server', max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='systemconfiguration',
            name='draw_download_endpoint',
            field=models.CharField(blank=True, default='/api/rtstruct/{task_id}/', help_text='Download endpoint of the DRAW API server where the RTStructureSet file is to be downloaded.', max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='systemconfiguration',
            name='draw_notify_endpoint',
            field=models.CharField(blank=True, default='/api/rtstruct/{task_id}/confirm/', help_text='Notification endpoint of the DRAW API server where notification is sent after completion of RTStructure Download.', max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='systemconfiguration',
            name='draw_status_endpoint',
            field=models.CharField(blank=True, default='/api/upload/{task_id}/status/', help_text='Status endpoint of the DRAW API server where status of segmentation is to be polled. The task_id is returned by the DRAW API server.', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='dicomfileexport',
            name='deidentified_zip_file_checksum',
            field=models.CharField(blank=True, help_text='Checksum of the zip file exported to the DRAW API server', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='dicomfileexport',
            name='deidentified_zip_file_path',
            field=models.CharField(blank=True, help_text='Path of the zip file exported to the DRAW API server', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='dicomfileexport',
            name='deidentified_zip_file_transfer_datetime',
            field=models.DateTimeField(blank=True, help_text='Datetime when the zip file was transferred to the DRAW API server', null=True),
        ),
        migrations.AlterField(
            model_name='dicomfileexport',
            name='deidentified_zip_file_transfer_status',
            field=models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', help_text='Status of the zip file transfer to the DRAW API server', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='dicomfileexport',
            name='server_segmentation_status',
            field=models.CharField(blank=True, help_text='Status of the segmentation returned by the DRAW API server', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='dicomfileexport',
            name='server_segmentation_updated_datetime',
            field=models.DateTimeField(blank=True, help_text='Datetime when the segmentation was updated by the DRAW API server', null=True),
        ),
        migrations.AlterField(
            model_name='systemconfiguration',
            name='draw_upload_endpoint',
            field=models.CharField(blank=True, default='/api/upload/', help_text='Upload endpoint of the DRAW API server where the image zip file and checksum is to be uploaded.', max_length=256, null=True),
        ),
    ]
